// Generated by CoffeeScript 1.9.1
(function() {
  var Canvas, Image, allTheThings, argv, filenames, fs, inputPath, j, len, n, outputPath;

  argv = require('minimist')(process.argv.slice(2));

  Canvas = require('canvas');

  Image = Canvas.Image;

  inputPath = argv.i != null ? argv.i : "images";

  outputPath = argv.o != null ? argv.o : "out";

  fs = require('fs');

  allTheThings = function(filename) {
    var canvas, ctx, doIt, image, img, makePixelGreyScale, out, stream;
    image = fs.readFileSync(__dirname + '/' + inputPath + '/' + filename);
    img = new Image;
    img.src = image;
    canvas = new Canvas(1920, 1080);
    ctx = canvas.getContext("2d");
    makePixelGreyScale = function(r, g, b, a) {
      var y;
      y = (0.3 * r) + (0.59 * g) + (0.11 * b);
      r = y;
      g = y;
      b = y;
      return [r, g, b, a];
    };
    doIt = function() {
      var a, b, g, i, imageData, j, length, pixel, r, ref;
      imageData = ctx.getImageData(0, 0, 1920, 1080);
      length = imageData.data.length / 4;
      for (i = j = 0, ref = length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        r = imageData.data[i * 4 + 0];
        g = imageData.data[i * 4 + 1];
        b = imageData.data[i * 4 + 2];
        a = imageData.data[i * 4 + 3];
        pixel = makePixelGreyScale(r, g, b, a);
        imageData.data[i * 4 + 0] = pixel[0];
        imageData.data[i * 4 + 1] = pixel[1];
        imageData.data[i * 4 + 2] = pixel[2];
        imageData.data[i * 4 + 3] = pixel[3];
      }
      return ctx.putImageData(imageData, 0, 0);
    };
    ctx.drawImage(img, 0, 0);
    console.log("image load");
    doIt();
    out = fs.createWriteStream(__dirname + '/' + outputPath + '/' + filename);
    stream = canvas.createPNGStream();
    return stream.on('data', function(chunk) {
      return out.write(chunk);
    });
  };

  filenames = fs.readdirSync(__dirname + '/' + inputPath);

  for (j = 0, len = filenames.length; j < len; j++) {
    n = filenames[j];
    allTheThings(n);
  }

}).call(this);
